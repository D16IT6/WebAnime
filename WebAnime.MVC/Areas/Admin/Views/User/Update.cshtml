@using Roles = DataModels.EF.Identity.Roles
@model WebAnime.MVC.Areas.Admin.Models.UserViewModel
@{
    ViewBag.Title = "Update";
    var roleList = ViewBag.Roles as List<Roles> ?? new List<Roles>();
}
<h2>Cập nhật thông tin tài khoản</h2>

@using (Html.BeginForm())
{
    @Html.HiddenFor(x => x.Id)
    @Html.HiddenFor(x=>x.Password)
    @Html.HiddenFor(x=>x.ReTypePassword)
    @Html.AntiForgeryToken()
    @Html.ValidationSummary()
    <div class="row mb-2">
        @Html.LabelFor(x => x.FullName, new { @class = "col-form-label col-2" })
        <div class="col-4">
            @Html.TextBoxFor(x => x.FullName, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.FullName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row mb-2">
        @Html.LabelFor(x => x.UserName, new { @class = "col-form-label col-2" })
        <div class="col-4">
            @Html.TextBoxFor(x => x.UserName, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.UserName, "", new { @class = "text-danger" })

        </div>
    </div>
    @*<div class="row mb-2">
            @Html.LabelFor(x => x.Password, new { @class = "col-form-label col-2" })
            <div class="col-4">
                @Html.PasswordFor(x => x.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Password, "", new { @class = "text-danger" })

            </div>
        </div>
        <div class="row mb-2">
            @Html.LabelFor(x => x.ReTypePassword, new { @class = "col-form-label col-2" })
            <div class="col-4">
                @Html.PasswordFor(x => x.ReTypePassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.ReTypePassword, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="row mb-2">
        @Html.LabelFor(x => x.BirthDay, new { @class = "col-form-label col-2" })
        <div class="col-4">
            @*@Html.Editor("BirthDayFake", new { htmlAttributes = new { @class = "form-control", type = "date", value = Model.BirthDay.ToString("dd/MM/yyyy") } })*@
            @Html.TextBoxFor(x => x.BirthDay, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.BirthDay, "", new { @class = "text-danger" })

        </div>
    </div>
    <div class="row mb-2">
        @Html.LabelFor(x => x.Email, new { @class = "col-form-label col-2" })
        <div class="col-4">
            @Html.TextBoxFor(x => x.Email, new { @class = "form-control", type = "email" })
            @Html.ValidationMessageFor(x => x.Email, "", new { @class = "text-danger" })

        </div>
    </div>
    <div class="row mb-2">
        @Html.LabelFor(x => x.PhoneNumber, new { @class = "col-form-label col-2" })
        <div class="col-4">
            @Html.TextBoxFor(x => x.PhoneNumber, new { @class = "form-control", type = "tel",pattern="[0-9]"})
            @Html.ValidationMessageFor(x => x.PhoneNumber, "", new { @class = "text-danger" })

        </div>
    </div>

    <div class="row mb-2">
        @Html.LabelFor(x => x.RoleListIds, new { @class = "col-form-label col-2" })
        <div class="col-4">
            @*@Html.ListBox("RoleListIdsFake", new MultiSelectList(roleList, "Id", "Name", Model.RoleListIds))*@
            @Html.ListBoxFor(x => x.RoleListIds, new MultiSelectList(roleList, "Id", "Name"))
            @Html.ValidationMessageFor(x => x.RoleListIds, "", new { @class = "text-danger" })

        </div>
    </div>
    <div class="row mb-2">
        <div class="col-3">
            <button class="btn btn-primary">Cập nhật</button>
        </div>
    </div>
}
@section footerCss{
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">

}
@section footerJs{
    @Html.Partial("_ValidationScriptsPartial")
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script>

        const birthDay = $(`#BirthDay`).val().substr(0, 10).split('/');
        const year = birthDay[2];
        const month = birthDay[1];
        const day = birthDay[0];
        $(`#BirthDay`).val(`${year}-${month}-${day}`);
        $(`#BirthDay`).flatpickr({
            altInput: true,
            altFormat: "d/m/Y"
        });

    </script>
}