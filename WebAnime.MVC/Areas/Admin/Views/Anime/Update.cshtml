@using DataModels.EF
@model WebAnime.MVC.Areas.Admin.Models.AnimeViewModel

@{
    ViewBag.Title = "Cập nhật anime";
    var ageRatingsList = ViewBag.AgeRating as IEnumerable<AgeRatings>;

    var categoriesList = ViewBag.Category as IEnumerable<Categories>;

    var countryList = ViewBag.Country as IEnumerable<Countries>;

    var statusList = ViewBag.Status as IEnumerable<Statuses>;

    var studioList = ViewBag.Studio as IEnumerable<Studios>;

    var typeList = ViewBag.Type as IEnumerable<Types>;
}

<h2>Cập nhật anime</h2>

@using (Html.BeginForm("Update", "Anime", FormMethod.Post))
{
    @Html.ValidationSummary(true)
    <div class="row mb-3">
        @Html.LabelFor(x => x.Title, new { @class = "col-form-label col-xl-2 fw-bold" })
        <div class="col-xl-10">
            @Html.TextBoxFor(x => x.Title, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Title, "", new { @class = "text-danger " })
        </div>
    </div>

    <div class="row mb-3">
        @Html.LabelFor(x => x.OriginalTitle, new { @class = "col-form-label col-xl-2 fw-bold" })
        <div class="col-xl-10">
            @Html.TextBoxFor(x => x.OriginalTitle, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.OriginalTitle, "", new { @class = "text-danger " })
        </div>
    </div>
    <div class="row mb-3">
        @Html.LabelFor(x => x.Synopsis, new { @class = "col-form-label col-xl-2 fw-bold" })
        <div class="col-xl-10">
            @Html.TextAreaFor(x => x.Synopsis, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Synopsis, "", new { @class = "text-danger " })
        </div>
    </div>
    <div class="row mb-3">
        @Html.LabelFor(x => x.Poster, new { @class = "col-form-label col-xl-2 fw-bold" })
        <div class="col-xl-8">
            @Html.TextBoxFor(x => x.Poster, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Poster, "", new { @class = "text-danger " })
        </div>
        <div class="col-xl-2">
            <button type="button" class="btn btn-primary w-100" id="btnPoster">Chọn ảnh</button>
        </div>
    </div>
    <div class="row mb-3">
        @Html.LabelFor(x => x.Duration, new { @class = "col-form-label col-xl-2 fw-bold" })
        <div class="col-xl-10">
            @Html.TextBoxFor(x => x.Duration, new { @class = "form-control", type = "number" })
            @Html.ValidationMessageFor(x => x.Duration, "", new { @class = "text-danger " })
        </div>
    </div>

    <div class="row mb-3">
        @Html.LabelFor(x => x.Release, new { @class = "col-form-label col-xl-2 fw-bold" })
        <div class="col-xl-10">
            @Html.TextBoxFor(x => x.Release, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Release, "", new { @class = "text-danger " })
        </div>
    </div>

    <div class="row mb-3">
        @Html.LabelFor(x => x.Trailer, new { @class = "col-form-label col-xl-2 fw-bold" })
        <div class="col-xl-10">
            @Html.TextBoxFor(x => x.Trailer, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Trailer, "", new { @class = "text-danger " })
        </div>
    </div>

    <div class="row mb-3">
        @Html.LabelFor(x => x.TotalEpisodes, new { @class = "col-form-label col-xl-2 fw-bold" })
        <div class="col-xl-10">
            @Html.EditorFor(x => x.TotalEpisodes, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(x => x.TotalEpisodes, "", new { @class = "text-danger " })
        </div>
    </div>

    <div class="row mb-3">
        @Html.LabelFor(x => x.StatusId, new { @class = "col-form-label col-xl-2 fw-bold" })
        <div class="col-xl-10">
            @Html.DropDownListFor(x => x.StatusId, new SelectList(statusList, "Id", "Name"), new { @class = "form-select" })
            @Html.ValidationMessageFor(x => x.StatusId, "", new { @class = "text-danger " })
        </div>
    </div>

    <div class="row mb-3">
        @Html.LabelFor(x => x.TypeId, new { @class = "col-form-label col-xl-2 fw-bold" })
        <div class="col-xl-10">
            @Html.DropDownListFor(x => x.TypeId, new SelectList(typeList, "Id", "Name"), new { @class = "form-select" })
            @Html.ValidationMessageFor(x => x.TypeId, "", new { @class = "text-danger " })
        </div>
    </div>

    <div class="row mb-3">
        @Html.LabelFor(x => x.CountryId, new { @class = "col-form-label col-xl-2 fw-bold" })
        <div class="col-xl-10">
            @Html.DropDownListFor(x => x.CountryId, new SelectList(countryList, "Id", "Name"), new { @class = "form-select" })
            @Html.ValidationMessageFor(x => x.CountryId, "", new { @class = "text-danger " })
        </div>
    </div>

    <div class="row mb-3">
        @Html.LabelFor(x => x.AgeRatingId, new { @class = "col-form-label col-xl-2 fw-bold" })
        <div class="col-xl-10">
            @Html.DropDownListFor(x => x.AgeRatingId, new SelectList(ageRatingsList, "Id", "Name"), new { @class = "form-select" })
            @Html.ValidationMessageFor(x => x.AgeRatingId, "", new { @class = "text-danger " })
        </div>
    </div>

    <div class="row mb-3">
        @Html.LabelFor(x => x.CategoriesId, new { @class = "col-form-label col-xl-2 fw-bold" })
        <div class="col-xl-10">
            @Html.ListBoxFor(x => x.CategoriesId, new MultiSelectList(categoriesList, "Id", "Name"))
            @Html.ValidationMessageFor(x => x.CategoriesId, "", new { @class = "text-danger " })
        </div>

    </div>

    <div class="row mb-3">
        @Html.LabelFor(x => x.StudiosId, new { @class = "col-form-label col-xl-2 fw-bold" })
        <div class="col-xl-7">
            @Html.ListBoxFor(x => x.StudiosId, new MultiSelectList(studioList, "Id", "Name"))
            @Html.ValidationMessageFor(x => x.StudiosId, "", new { @class = "text-danger " })
        </div>
        <div class="col-xl-3">
            @Html.ActionLink(@"Chưa có studio? Thêm mới ngay!","Create","Studio",null,new {@class="btn btn-primary w-100 h-100"})
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <button class="btn btn-primary" type="submit" id="btnCreate">Cập nhật</button> 
            @Html.ActionLink("Về trang chủ", "Index", null, new { @class = "btn btn-primary" })

        </div>
    </div>
}
@section footerCss{
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">

    <link href="~/Resources/Library/Common/jQuery-MultiSelect/jquery.multiselect.css" rel="stylesheet" />
    <style>
        .ms-options-wrap button {
            border-color: rgb(222, 226, 230);
        }

            .ms-options-wrap button span {
                font-size: 16px;
            }

        .ms-options-wrap > button:after {
            right: 15px;
        }
    </style>
}
@section footerJs
{
    @Html.Partial("_ValidationScriptsPartial")
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script src="~/Resources/Library/Common/jQuery-MultiSelect/jquery.multiselect.js"></script>
    <script>
        $( document ).ready(function() {
            const editor = window.CKEDITOR.replace('Synopsis');
            CKFinder.setupCKEditor(editor, "/Resources/Library/Common/ckfinder/");

            editor.on('change', function () {
                editor.updateElement();
                $(editor.element.$).trigger('change');
            });

            $(`#btnPoster`).click(function () {
                const ckFinder = new CKFinder();
                ckFinder.selectActionFunction = function (fileUrl) {
                    $(`#Poster`).val(fileUrl);
                };
                ckFinder.popup();
            });
            $(`#Release`).flatpickr({
                altInput: true,
                altFormat: "d/m/Y"
            });
            $(`select#CategoriesId[multiple]`).multiselect({
                columns: 4,
                texts: {
                    placeholder: 'Chọn thể loại'
                },
                search: true,
                searchOptions:
                {
                    searchText: true
                },
                minHeight: 120
            });
            $(`select#StudiosId[multiple]`).multiselect({
                columns: 4,
                search: true,
                searchOptions:
                {
                    searchText: true
                },
                texts: {
                    placeholder: 'Chọn nhà sản xuất'

                },
                minHeight: 120
            });

            const listMultiSelect = document.querySelectorAll(`.ms-options-wrap button`);
            for (const item of listMultiSelect) {
                item.classList.add(`form-control`);
                item.classList.add(`border-1`);
                item.classList.add(`p-2`);
            }
        });
    </script>

}
